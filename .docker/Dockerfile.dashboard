# Create a base image with turbo as global binary
FROM node:alpine AS turbobase
RUN apk update
WORKDIR /app
RUN yarn global add turbo


# Create an image with the necessary files
FROM alpine AS copier
WORKDIR /app
COPY ./.git ./.git
COPY ./apps ./apps
COPY ./.turbo ./.turbo
COPY ./packages ./packages
COPY ./turbo.json ./turbo.json
COPY ./package.json ./package.json
COPY ./yarn.lock ./yarn.lock



# Create an image with the pruned microservice
FROM turbobase AS pruner

ARG MICROSERVICE_NAME="dashboard"

WORKDIR /app
COPY --from=copier /app .
RUN turbo prune --scope=${MICROSERVICE_NAME} --docker


# Create an image with the installed dependacies
FROM node:alpine AS installer
RUN apk update
WORKDIR /app
COPY --from=pruner /app/out/json/ .
COPY --from=pruner /app/out/yarn.lock ./yarn.lock
RUN yarn install

# Create an image for the build
FROM node:alpine AS builder

ARG MICROSERVICE_RELATIVE_PATH="./apps/dashboard"

RUN apk update
WORKDIR /app
COPY --from=pruner /app/.git ./.git
COPY --from=pruner /app/.turbo ./.turbo
COPY --from=installer /app/ .
COPY --from=pruner /app/out/full/ .
COPY .gitignore .gitignore
ENV NODE_ENV production
COPY  .internal ./.internal
RUN yarn build --filter=${MICROSERVICE_RELATIVE_PATH}

# ADD your runner image here which will be the last image in the chain

# Production image, copy all the files in the nginx image
FROM nginx:alpine AS runner

ARG MICROSERVICE_RELATIVE_PATH="./apps/dashboard"

COPY ./nginx /etc/nginx/.
COPY ${MICROSERVICE_RELATIVE_PATH}/nginx/default.conf /etc/nginx/conf.d/default.conf

COPY --from=builder /app/apps/dashboard/build /usr/share/nginx/html/dashboard
# COPY --from=builder /app/apps/dashboard/nginx/nginx.conf /etc/nginx/nginx.conf


