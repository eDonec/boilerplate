ARG MICROSERVICE_NAME="auth"
# Create an image with the necessary files
FROM alpine AS copier
WORKDIR /app
COPY ./.git ./.git
COPY ./apps ./apps
COPY ./.turbo ./.turbo
COPY ./packages ./packages
COPY ./turbo.json ./turbo.json
COPY ./package.json ./package.json
COPY ./yarn.lock ./yarn.lock



# Create an image with the pruned microservice
FROM nader2560/turborepo-base AS pruner
ARG MICROSERVICE_NAME
WORKDIR /app
COPY --from=copier /app .
RUN turbo prune --scope=${MICROSERVICE_NAME} --docker


# Create an image with the installed dependacies
FROM node:18-alpine AS installer
RUN apk update
WORKDIR /app
COPY --from=pruner /app/out/json/ .
COPY --from=pruner /app/out/yarn.lock ./yarn.lock
RUN yarn install --frozen-lockfile --network-timeout 100000
COPY  .internal ./.internal

# Create an image for the build
FROM node:18-alpine AS builder

RUN apk update
ARG MICROSERVICE_NAME
WORKDIR /app
COPY --from=pruner /app/.git ./.git
COPY --from=pruner /app/.turbo ./.turbo
COPY --from=installer /app/ .
COPY --from=pruner /app/out/full/ .
COPY .gitignore .gitignore
COPY --from=installer /app/.internal ./.internal
ENV NODE_ENV production
RUN yarn build --filter=${MICROSERVICE_NAME}

# Create an image for the build
FROM node:18-alpine AS runner
ARG MICROSERVICE_NAME
ENV MICROSERVICE_NAME=${MICROSERVICE_NAME}
RUN apk update
WORKDIR /app
COPY --from=builder /app/apps/APIs/${MICROSERVICE_NAME}/build .
COPY --from=builder /app/node_modules /app/node_modules


# ADD your runner image here which will be the last image in the chain
