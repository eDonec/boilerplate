# Create a base image with turbo as global binary
FROM node:alpine AS turbobase
RUN apk update
WORKDIR /app
RUN yarn global add turbo


# Create an image with the necessary files
FROM alpine AS copier
WORKDIR /app
COPY ./.git ./.git
COPY ./apps ./apps
COPY ./.turbo ./.turbo
COPY ./packages ./packages
COPY ./turbo.json ./turbo.json
COPY ./package.json ./package.json
COPY ./yarn.lock ./yarn.lock



# Create an image with the pruned microservice
FROM turbobase AS pruner

ARG MICROSERVICE_NAME="client"

WORKDIR /app
COPY --from=copier /app .
RUN turbo prune --scope=${MICROSERVICE_NAME} --docker


# Create an image with the installed dependacies
FROM node:alpine AS installer
RUN apk update
WORKDIR /app
COPY --from=pruner /app/out/json/ .
COPY --from=pruner /app/out/yarn.lock ./yarn.lock
RUN yarn install

# Create an image for the build
FROM node:alpine AS builder

ARG MICROSERVICE_RELATIVE_PATH="./apps/client"

RUN apk update
WORKDIR /app
COPY --from=pruner /app/.git ./.git
COPY --from=pruner /app/.turbo ./.turbo
COPY --from=installer /app/ .
COPY --from=pruner /app/out/full/ .
COPY .gitignore .gitignore
ENV NODE_ENV production
COPY  .internal ./.internal
RUN yarn build --filter=${MICROSERVICE_RELATIVE_PATH}

# ADD your runner image here which will be the last image in the chain

# Production image, copy all the files and run next
FROM node:alpine AS runner
ARG MICROSERVICE_STANDALONE_PATH="/app/apps/client/build/standalone/"
ARG MICROSERVICE_APP_PATH="/apps/client"
WORKDIR /app

RUN addgroup --system --gid 1001 nodejs
RUN adduser --system --uid 1001 nextjs

RUN chown -R nextjs:nodejs /app
ENV NODE_ENV production
# Next.js collects completely anonymous telemetry data about general usage.
# The next line disables it
ENV NEXT_TELEMETRY_DISABLED 1

# Automatically leverage output traces to reduce image size
# https://nextjs.org/docs/advanced-features/output-file-tracing
COPY --from=builder ${MICROSERVICE_STANDALONE_PATH}${MICROSERVICE_APP_PATH} ./
COPY --from=builder ${MICROSERVICE_STANDALONE_PATH}/node_modules ./node_modules
COPY --from=builder ${MICROSERVICE_STANDALONE_PATH}/package.json ./
COPY --from=builder /app/${MICROSERVICE_APP_PATH}/build/static ./build/static

# You only need to copy next.config.js if you are NOT using the default configuration
COPY --from=builder /app/${MICROSERVICE_APP_PATH}/next.config.js ./
COPY --from=builder /app/${MICROSERVICE_APP_PATH}/public ./public


